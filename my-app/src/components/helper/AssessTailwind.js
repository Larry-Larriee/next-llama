import React from "react";

export default function AssessTailwind({ userSolution }) {
  let tailwindKeywords = {
    accentColor: "accent-",
    alignContent: "content-",
    alignItems: "items-",
    alignSelf: "self-",
    animation: "animate-",
    appearance: "appearance-",
    aspectRatio: "aspect-",
    backdropBlur: "backdrop-blur-",
    backdropBrightness: "backdrop-brightness-",
    backdropContrast: "backdrop-contrast-",
    backdropGrayscale: "backdrop-grayscale-",
    backdropHueRotate: "backdrop-hue-rotate-",
    backdropInvert: "backdrop-invert-",
    backdropOpacity: "backdrop-opacity-",
    backdropSaturate: "backdrop-saturate-",
    backdropSepia: "backdrop-sepia-",
    backgroundAttachment: "bg-regex",
    backgroundBlendMode: "bg-blend-",
    backgroundClip: "bg-clip-",
    backgroundColor: "bg-regex",
    backgroundImage: "bg-gradient-",
    backgroundOrigin: "bg-origin-",
    backgroundPosition: "bg-regex",
    backgroundRepeat: "bg-regex",
    backgroundSize: "bg-regex",
    blur: "blur-",
    borderCollapse: "border-regex",
    borderColor: "border-regex",
    borderRadius: "rounded",
    borderSpacing: "border-spacing-",
    borderStyle: "border-regex",
    borderWidth: "border-regex",
    boxDecorationBreak: "box-decoration-",
    boxShadow: "shadow-regex",
    boxShadowColor: "shadow-regex",
    boxSizing: "box-",
    breakAfter: "break-after-",
    breakBefore: "break-before-",
    breakInside: "break-inside-",
    brightness: "brightness-",
    captionSide: "caption-",
    caretColor: "caret-",
    clear: "clear-",
    columns: "columns-",
    container: "container",
    content: "content-",
    contrast: "contrast-",
    cursor: "cursor-",
    divideColor: "divide-regex",
    divideOpacity: "divide-regex",
    divideStyle: "divide-regex",
    divideWidth: "divide-regex",
    dropShadow: "drop-shadow-",
    fill: "fill-",
    flex: "flex",
    flexBasis: "basis-",
    flexDirection: "flex-",
    flexGrow: "grow",
    flexShrink: "shrink",
    flexWrap: "flex-regex",
    float: "float-",
    fontFamily: "font-",
    fontSize: "text-regex",
    fontSmoothing: "regex-antialiased",
    fontStyle: "regex-italic",
    fontVariantNumeric: "regex-nums",
    fontWeight: "text-regex",
    forcedColorAdjust: "forced-color-adjust-",
    gap: "gap-",
    gradientColorStops: "from-",
    grayscale: "grayscale",
    gridAutoColumns: "auto-cols-",
    gridAutoFlow: "grid-flow-",
    gridAutoRows: "auto-rows-",
    gridColumnSpan: "col-span-",
    gridColumnEnd: "col-end-",
    gridColumnStart: "col-start-",
    gridRowSpan: "row-span-",
    gridRowEnd: "row-end-",
    gridRowStart: "row-start-",
    gridTemplateColumns: "grid-cols-",
    gridTemplateRows: "grid-rows-",
    height: "h-",
    hueRotate: "hue-rotate-",
    hyphens: "hypens-",
    invert: "invert",
    isolation: "isolate",
    justifyContent: "justify-",
    justifyItems: "justify-items-",
    justifySelf: "justify-self-",
    letterSpacing: "tracking-",
    lineClamp: "line-clamp-",
    lineHeight: "leading-",
    listStyleImage: "list-image-none",
    listStylePosition: "list-regex",
    listStyleType: "list-regex",
    margin: "m-",
    maxHeight: "max-h-",
    maxWidth: "max-w-",
    minHeight: "min-h-",
    minWidth: "min-w-",
    mixBlendMode: "mix-blend-",
    objectFit: "object-regex",
    objectPosition: "object-regex",
    opacity: "opacity-",
    order: "order-",
    outlineColor: "outline-regex",
    outlineOffset: "outline-offset-",
    outlineStyle: "outline-regex",
    outlineWidth: "outline-regex",
    overflow: "overflow-",
    overscrollBehavior: "overscroll-",
    padding: "p-",
    placeContent: "place-content-",
    placeItems: "place-items-",
    placeSelf: "place-self-",
    placeholder: "placeholder:",
    pointerEvents: "pointer-events",
    position: "regex",
    resize: "resize",
    ringColor: "ring-regex",
    ringOffsetColor: "ring-offset-regex",
    ringOffsetWidth: "ring-offset-regex",
    ringWidth: "ring-regex",
    rotate: "rotate-",
    saturate: "saturate-",
    scale: "scale-",
    scrollBehavior: "scroll-",
    scrollMargin: "scroll-m",
    scrollPadding: "scroll-p",
    scrollSnapAlign: "snap-regex",
    scrollSnapStop: "snap-regex",
    scrollSnapType: "snap-regex",
    sepia: "sepia",
    size: "size-",
    skew: "skew-",
    space: "space-",
    stroke: "stroke-regex",
    strokeWidth: "stroke-regex",
    tableLayout: "table-",
    textAlign: "text-regex",
    textColor: "text-regex",
    textDecoration: "regex",
    textDecorationColor: "decoration-regex",
    textDecorationStyle: "decoration-regex",
    textDecorationThickness: "decoration-regex",
    textIndent: "indent-",
    textOverflow: "regex",
    textTransform: "regex",
    textUnderlineOffset: "underline-",
    textWrap: "text-regex",
    touchAction: "touch-",
    transform: "transform-",
    transformOrigin: "origin-",
    transitionDelay: "delay-",
    transitionDuration: "duration-",
    transitionProperty: "transition",
    transitionTimingFunction: "ease-",
    translate: "translate-",
    userSelect: "select-",
    verticalAlign: "align-",
    visibility: "regex",
    whitespace: "whitespace-",
    width: "w-",
    willChange: "will-change-",
    wordBreak: "break-",
    zIndex: "z-",
  };

  let included;

  // for...in allows you to iterate over js objects
  for (let key in tailwindKeywords) {
    if (userSolution.includes(tailwindKeywords[key])) {
      included = key + " is included";
    }
  }

  return (
    <>
      <li>
        <p className="text-lg text-white">{included}</p>
      </li>
    </>
  );
}
